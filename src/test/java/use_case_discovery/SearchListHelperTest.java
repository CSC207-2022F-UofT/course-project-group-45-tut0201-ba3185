package use_case_discovery;

import database.csvManager;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import use_case.discovery.SearchAnswerRequestModel;
import use_case.discovery.SearchListHelper;

import java.util.*;

/**
 * Unit tests for the SearchInteractor class, which tests two different user answers.
 * Tests are implemented by examining the if the desired outputdata is generated by checking the
 * responseModel that being generated by the interactor.The connection of each component of clean architecture is well tested, however, test of controller and view is not
 * included. The approach of how to test those two parts will be addressed later
 * */
public class SearchListHelperTest {
    static SearchAnswerRequestModel requestModel;
    static SearchListHelper helper;


    @BeforeEach
    public void setUp(){
        csvManager manager = new csvManager();
        List<Double> location = new ArrayList<>(Arrays.asList(14.5,14.5));
        List<String> interestRank = new ArrayList<>(Arrays.asList("income", "age", "marital status",
                "interests", "relationship type", "pet"));
        Map<String, Object> userInfo = new HashMap<>();
        userInfo.put("gender", "male");
        userInfo.put("income", 124124);
        userInfo.put("age", 124124);
        userInfo.put("maritalStatus", "single");
        userInfo.put("relationshipType", "friend");
        userInfo.put("pet", "yes");
        userInfo.put("sexualOrientation", "male");
        manager.writeCurrentUser("sunny", "sunny", "sunny", location, userInfo, interestRank,
                "sport");
        requestModel = new SearchAnswerRequestModel();

    }

    @Test
    public void correctList1(){
        requestModel.setAreaOfInterestOp(2); //music
        requestModel.setRelationshipOp(2); // long-term
        requestModel.setAgeLow(18);
        requestModel.setAgeUp(25);
        requestModel.setPetOp(1);// no
        requestModel.setIncomeLow(22);
        requestModel.setIncomeUp(50);
        requestModel.setMarriageStateOP(2);// married
        helper = new SearchListHelper(requestModel);

        List<String> expected = Arrays.asList("ben","jack","nick","chen","gavin","henry","ian","leo",
                "author","daniel","finch","ming","oliver","eric","heyy");


        List<String> actual = helper.getList();
        Assertions.assertEquals(expected, actual);

    }

    @Test
    public void correctList2(){
        requestModel.setAreaOfInterestOp(0); //sport
        requestModel.setRelationshipOp(1); // one-night
        requestModel.setAgeLow(25);
        requestModel.setAgeUp(70);
        requestModel.setPetOp(0);// yes
        requestModel.setIncomeLow(5);
        requestModel.setIncomeUp(20);
        requestModel.setMarriageStateOP(0);// single
        helper = new SearchListHelper(requestModel);

        List<String> expected = Arrays.asList("eric","heyy","oliver","author","gavin","leo",
                "nick","chen","daniel","finch","henry","ian","ming","ben","jack");


        List<String> actual = helper.getList();
        Assertions.assertEquals(expected, actual);

    }

    @AfterAll
    public static void cleanup() {
        csvManager manager = new csvManager();
        manager.logoutUser();
    }

}
